// Viaport
@mixin vw($property, $maxValue, $minValue) {
  $minVw: ($minValue / $minWidth) * 100vw;
  $maxVw: ($maxValue / $maxWidthContainer) * 100vw;
  
  #{$property}: clamp(#{$minValue}px, $maxVw, #{$maxValue}px);
}

// Adaptiv-value
@mixin adaptiv-value($property, $startSize, $minSize, $type: 1) {
  $addSize: $startSize - $minSize;

  @if $type==1 {
    // Только если меньше контейнера
    #{$property}: $startSize + px;

    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
  }

  @else if $type==2 {
    // Только если больше контейнера
    #{$property}: $startSize + px;

    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
  }

  @else {
    // Всегда
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
  }
}

//Mixin for size
@mixin adaptiv-font($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;
  $adaptmax: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidthContainer}));
  $adaptmin: calc(#{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidthContainer}));
  
  @media (max-width: 767px) {
    font-size: clamp(#{$mobSize + px}, $adaptmax, #{$pcSize + px});
  }
  @media (min-width: 767px) {
    font-size: clamp(#{$mobSize + px}, $adaptmin, #{$pcSize + px});
  }
}

//Медіа запит
@mixin mq($width, $type: max) {

  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);

    @if $type ==max {
      $width: $width - 1px;
    }

    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}

// Іконка трикутника
@mixin triangle($width, $direction, $color) {
  width: 0;
  height: 0;

  @if $direction ==up {
    border-left: $width solid transparent;
    border-right: $width solid transparent;
    border-bottom: $width solid $color;
  }

  @if $direction ==down {
    border-left: $width solid transparent;
    border-right: $width solid transparent;
    border-top: $width solid $color;
  }

  @if $direction ==left {
    border-top: $width solid transparent;
    border-bottom: $width solid transparent;
    border-right: $width solid $color;
  }

  @if $direction ==right {
    border-top: $width solid transparent;
    border-bottom: $width solid transparent;
    border-left: $width solid $color;
  }
}

//Псевдо класи для силок
@mixin link ($hover, $active, $link, $visit) {
  a {
    color: $link;

    &:visited {
      color: $visit;
    }

    &:hover {
      color: $hover;
    }

    &:active {
      color: $active;
    }
  }
}

//Псевдоелементи
@mixin pseudo-element($content: '', $display: block, $pos: absolute) {
  content: $content;
  display: $display;
  position: $pos;
}

//Центрування в позиції absolut
@mixin сentering-xy() {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

@mixin сentering-x() {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

@mixin сentering-y() {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

// Центрування флексами
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}